openapi: "3.0.0"
info:
  version: 1.0.0
  title: Yaade OpenAPI
  license:
    name: MIT
paths:
  /api/health:
    get:
      summary: Check if the server is running
      operationId: health
      tags:
        - health
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
  /api/collection:
    get:
      summary: Get all collections
      operationId: getAllCollections
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collections"
    post:
      summary: Create a collection
      operationId: postCollection
      requestBody:
        description: A new collection
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCollectionRequest"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
  /api/request:
    post:
      summary: Creata a new request
      operationId: postRequest
      requestBody:
        description: A new request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequestRequest"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
    put:
      summary: Update a request
      operationId: putRequest
      requestBody:
        description: The new request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request"
      responses:
        '200':
          description: "Success"
components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - version
    Request:
      type: object
      required:
        - id
        - collectionId
        - data
      properties:
        id:
          type: integer
          format: int64
        collectionId:
          type: integer
          format: int64
        data:
          type: object
    Collection:
      type: object
      required:
        - id
        - data
      properties:
        id:
          type: integer
          format: int64
        version:
          type: string
        data:
          type: object
    Collections:
      type: array
      items:
        $ref: "#/components/schemas/Collection"

    ########## Requests ##########
    CreateCollectionRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    CreateRequestRequest:
      type: object
      required:
        - collectionId
        - name
        - type
      properties:
        collectionId:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string

